Accepts users input and then logs the user inside of the console.
Ask first for the username & password. After a succesfull request, ask the user for the UID. The UID will be inside the response from the server, if the username&password registration was succesfull.
After the complete registration, the user will be able to get all the data & communicate with the server

**************** HEADER, BODY AND RESPONSE STYLE ****************

Whenever the client sends data to the server we will insert a header in front of the information given from the user

{HEADER}{BODY}

The user will never be able to use [] inside the messages sent to the server in order to make sure that we can separate the header from the body. 

Inside the body we will have data given from the user. It's like an HTTP/HTTPS get request.

POSSIBLE HEADER VALUES & RESPONSES FROM THE SERVER:

I will use double curly braces inside the body in order to format it correctly with python

{CLIENT_LOGIN_INFO_USERNAME_PASSWORD} -> Used when the client is logging in with the username and password
Body structure : {{USERNAME:{0}|PASSWORD:{1}}}
RESPONSE FROM THE SERVER:
Successful:
SERVER_LOGIN_INFO_USERNAME_PASSWORD_SUCCESSFUL_<UID>
Username or password wrong:
SERVER_LOGIN_INFO_USERNAME_PASSWORD_WRONG

{CLIENT_LOGIN_INFO_UID} -> Used when the client is logging in with the UID, after a successfull username & password response
Body structure : {{UID:{0}:|USERNAME:{1}|PASSWORD:{2}|...}}
RESPONSE FROM THE SERVER:
Successful:
{{SERVER_LOGIN_INFO_UID_SUCCESSFULL}{UID:<UID>, Username: <>, Password: <>, FirstName : <> , ...}}
UID wrong:
SERVER_LOGIN_INFO_UID_WRONG

**************** HEADER, BODY AND RESPONSE STYLE ****************